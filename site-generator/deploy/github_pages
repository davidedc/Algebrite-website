#!/bin/bash

source "${BASH_SOURCE[0]}.cfg"

bold() {
    echo "$(tty -s && tput bold)$1$(tty -s && tput sgr0)"
}

error() {
    echo "$(tty -s && tput bold)$(tty -s && tput setaf 1)$1$(tty -s && tput sgr0)"
}

deploy() {
    target=$(basename ${repository})
    folder=$(mktemp -d)
    target=${folder}/${target%.*}
    if [ ! -d "${target}" ]; then
        bold "git clone ${repository} ${target}${regular}"
        git clone ${repository} ${target}
    elif [ "$(git -C "${target}" remote get-url origin)" != "${repository}" ]; then
        error "'${target}' already exists."
        return
    fi
    bold "rm -rf ${target}/*"
    rm -rf "${target}/*"
    bold "cp -r build/* ${target}/"
    cp -r "build/" "${target}/"
    pushd "${target}" > /dev/null
    bold "git add *"
    git add --all --verbose *
    mesasge=""
    while test $# -gt 0
    do
        arg=$1
        shift
        if [ "$arg" == "--message" ] && [ $# -gt 0 ]; then
            message=$@
            break
        fi
    done
    if [ -z "${message}" ]; then # if no description is provided amend last commit and push --force
        bold "git commit --amend --no-edit"
        git commit --amend --no-edit
        bold "git push --force"
        git push --force
    else
        bold "git commit -m '${message}'"
        git commit -m "${message}"
        bold "git push"
        git push
    fi
    popd > /dev/null
    bold "rm -rf ${folder}"
    rm -rf "${folder}"
}

console() {
    url=${repository%.*}
    url=${url/://}
    url=${url/git@/https://}
    case "$(uname -s)" in
        Darwin*) open ${url};;
        Linux*) xdg-open ${url};;
        MINGW*) start "" ${url};;
    esac
}

command="$1"
shift
case "${command}" in
    "deploy") deploy $@;;
    "log") echo "Not supported for GitHub Pages.";;
    "console") console;;
esac
